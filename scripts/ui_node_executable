#!/usr/bin/env python3

import threading
import argparse
import json
import logging
from ros_sugar.core.ui_node import UINode, UINodeConfig
from ros_sugar.launch.executable import executable_main

import uvicorn
from ui_node.frontend import FHApp


def main():
    """
    Executable to run a component as a ros node.
    Used to start a node using Launcher
    """
    logging.info("Starting UI Node executable")

    logging.info("Setting up UI node with component configs in UI Node")
    parser = argparse.ArgumentParser()
    parser.add_argument(
        "--config",
        type=json.loads,
        required=True,
    )
    args, _ = parser.parse_known_args()
    component_configs = args.config.get("components", {})

    fh = FHApp(component_configs)
    app, _ = fh.get_app()

    # Start UI helper ROS node in a separate thread
    ros_thread = threading.Thread(
        target=executable_main,
        kwargs={"list_of_components": [UINode], "list_of_configs": [UINodeConfig]},
        daemon=True,
    )
    ros_thread.start()

    # Routes for the app backend
    @app.get("/")
    async def main_page():
        """Serves the main application page."""
        return fh.get_main_page()

    @app.get("/settings/show")
    async def settings_show():
        return fh.get_settings()

    @app.ws("/ws", conn=fh.on_conn, disconn=fh.on_disconn)
    async def ws(msg: str, send):
        pass
        # await send(faster.Div('Hello ' + msg, id="notifications"))

    uvicorn.run(app, host="0.0.0.0", port=5001)


if __name__ == "__main__":
    main()
